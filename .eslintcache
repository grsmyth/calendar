[{"/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/reportWebVitals.js":"1","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/index.jsx":"2","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/App.jsx":"3","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/Home/index.jsx":"4","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/Components/Modal/index.jsx":"5","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/Components/Slider/index.jsx":"6","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/utils/index.js":"7"},{"size":364,"mtime":1608913127112,"results":"8","hashOfConfig":"9"},{"size":545,"mtime":1608913133351,"results":"10","hashOfConfig":"11"},{"size":141,"mtime":1609011681440,"results":"12","hashOfConfig":"11"},{"size":3593,"mtime":1609179783024,"results":"13","hashOfConfig":"11"},{"size":1302,"mtime":1609175772147,"results":"14","hashOfConfig":"11"},{"size":2174,"mtime":1609174176026,"results":"15","hashOfConfig":"11"},{"size":749,"mtime":1609089569708,"results":"16","hashOfConfig":"11"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mkaihd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1j7yqt9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/reportWebVitals.js",[],"/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/index.jsx",[],["34","35","36","37","38"],"/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/App.jsx",[],"/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/Home/index.jsx",[],"/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/Components/Modal/index.jsx",["39","40","41","42","43","44"],"import React, { useState } from 'react';\nimport Slider from '../Slider';\nimport './modal.scss';\n\nfunction Modal({ submit, data }) {\n  const [red, updateRed] = useState(data ? data.blood : 75);\n  const [blue, updateBlue] = useState(data ? data.anxiety : 75);\n  const [black, updateBlack] = useState(data ? data.heart : 75);\n  const [notes, updateNotes] = useState(data ? data.notes : '');\n  const onChange = ({ target }) => updateNotes(target.value);\n\n  const submitButton = () => {\n    submit(red, blue, black, notes);\n  };\n\n  return (\n    <div className=\"modalContainer\">\n      <Slider option=\"red\" label=\"Bleeding\" update={updateRed} startValue={red} />\n      <Slider option=\"blue\" label=\"Anxiety\" update={updateBlue} startValue={blue} />\n      <Slider option=\"black\" label=\"Heart\" update={updateBlack} startValue={black} />\n      <div className=\"textArea\">\n        <p>Notes</p>\n        <textarea id=\"notes\" name=\"notes\" onChange={onChange} value={notes} />\n      </div>\n      <div className=\"buttonArea\" style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <div className=\"flex\" />\n        <button type=\"button\" onClick={submitButton} className=\"flex submitButton\">\n          Submit\n        </button>\n        <div className=\"flex\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/Components/Slider/index.jsx",["45","46","47","48"],"import React, { useState } from 'react';\nimport { returnRed, returnBlue, returnBlack } from '../../utils';\nimport './slider.scss';\n\nconst maxRange = '150';\nconst minRange = '0';\n\nfunction Slider({ label, option, update, startValue }) {\n  const [value, onChange] = useState(startValue);\n  const changeValue = ({ target }) => {\n    onChange(target.value);\n    update(target.value);\n  };\n\n  const equalValue = () => (255 * (maxRange - value)) / maxRange;\n\n  let rgb = [0, 0, 0];\n  if (option === 'red') {\n    rgb = returnRed(value);\n    // eslint-disable-next-line no-undef\n    document.documentElement.style.setProperty(\n      '--thumb-color-red',\n      `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`\n    );\n  }\n\n  if (option === 'blue') {\n    rgb = returnBlue(value);\n    // eslint-disable-next-line no-undef\n    document.documentElement.style.setProperty(\n      '--thumb-color-blue',\n      `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`\n    );\n  }\n\n  if (option === 'black') {\n    rgb = returnBlack(value);\n    // eslint-disable-next-line no-undef\n    document.documentElement.style.setProperty(\n      '--thumb-color-black',\n      `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`\n    );\n  }\n\n  const breakColor = () => {\n    if (option === 'red') {\n      return `linear-gradient(to right, white, red, rgb(155,0,0))`;\n    }\n    if (option === 'blue') {\n      return `linear-gradient(to right, white, blue, rgb(0,0,155))`;\n    }\n\n    return `linear-gradient(to right, white, black)`;\n  };\n\n  // eslint-disable-next-line no-undef\n  document.documentElement.style.setProperty(\n    '--thumb-color',\n    `rgb(${255 - equalValue()}, ${255 - equalValue()}, ${255 - equalValue()})`\n  );\n\n  return (\n    <>\n      <div className={`${option} sliderContainer`}>\n        <p>{label}</p>\n        <input\n          type=\"range\"\n          min={minRange}\n          max={maxRange}\n          value={value}\n          step=\"1\"\n          className=\"slider\"\n          id=\"myRange\"\n          onChange={changeValue}\n          style={{\n            backgroundColor: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n            backgroundImage: `${breakColor()}`,\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default Slider;\n","/Users/grsmyth/Documents/Projects/LearningProjects/calendar/src/utils/index.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":5,"column":18,"nodeType":"61","endLine":5,"endColumn":24},{"ruleId":"59","severity":1,"message":"62","line":5,"column":26,"nodeType":"61","endLine":5,"endColumn":30},{"ruleId":"59","severity":1,"message":"63","line":6,"column":49,"nodeType":"64","endLine":6,"endColumn":54},{"ruleId":"59","severity":1,"message":"65","line":7,"column":51,"nodeType":"64","endLine":7,"endColumn":58},{"ruleId":"59","severity":1,"message":"66","line":8,"column":53,"nodeType":"64","endLine":8,"endColumn":58},{"ruleId":"59","severity":1,"message":"67","line":9,"column":53,"nodeType":"64","endLine":9,"endColumn":58},{"ruleId":"59","severity":1,"message":"68","line":8,"column":19,"nodeType":"61","endLine":8,"endColumn":24},{"ruleId":"59","severity":1,"message":"69","line":8,"column":26,"nodeType":"61","endLine":8,"endColumn":32},{"ruleId":"59","severity":1,"message":"70","line":8,"column":34,"nodeType":"61","endLine":8,"endColumn":40},{"ruleId":"59","severity":1,"message":"71","line":8,"column":42,"nodeType":"61","endLine":8,"endColumn":52},"lines-around-directive",["72"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/prop-types","'submit' is missing in props validation","Property","'data' is missing in props validation","'data.blood' is missing in props validation","Identifier","'data.anxiety' is missing in props validation","'data.heart' is missing in props validation","'data.notes' is missing in props validation","'label' is missing in props validation","'option' is missing in props validation","'update' is missing in props validation","'startValue' is missing in props validation","padding-line-between-statements"]